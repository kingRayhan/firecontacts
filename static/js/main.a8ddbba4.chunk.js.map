{"version":3,"sources":["store/firebase.js","store/reducers/contactReducer.js","store/actions/actionTypes.js","store/reducers/bookmarkReducer.js","store/reducers/metaReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","store/index.js","components/AppNavbar.js","components/Layout.js","store/actions/removeFromBookmark.js","pages/Home.js","store/actions/removeContact.js","store/actions/addToBookmark.js","pages/Add.js","store/actions/addContact.js","pages/Login.js","pages/Register.js","pages/Bookmarks.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","firestore","contacts","reducer","state","arguments","length","undefined","_ref","type","payload","concat","Object","toConsumableArray","index","findIndex","contact","id","splice","newData","bookmarks","filter","bookmark","loading","objectSpread","loadingState","isLoggedin","user","authSetuser","dispatch","onAuthStateChanged","db","collection","doc","uid","get","then","res","data","userId","profile","rootReducer","combineReducers","meta","createStore","compose","applyMiddleware","apply","thunk","AppNavba","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","authLogout","localStorage","removeItem","toggle","bind","assertThisInitialized","isOpen","setState","react_default","a","createElement","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","Badge","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","first_name","DropdownMenu","right","DropdownItem","divider","React","Component","connect","signOut","Layout","Fragment","AppNavbar","Container","Row","Col","sm","children","removeFromBookmark","Home","searchTerm","isBookmarked","find","removeContact","window","confirm","search","e","target","value","_this2","Layout_Layout","react_spinners","sizeUnit","size","Input","onChange","placeholder","c","name","toLowerCase","includes","email","phone","map","Card","key","CardHeader","CardBody","CardFooter","Button","addToBookMark","contactId","userid","getItem","update","toastr","success","Add","errors","onSubmit","_callee","regenerator_default","wrap","_context","prev","next","preventDefault","keys","isEmpty","isEmail","addContact","v4","saveContact","history","push","stop","FormGroup","invalid","FormFeedback","Login","password","defineProperty","signInWithEmailAndPassword","setItem","catch","error","message","Register","last_name","facebook_profile_url","_this$state","createUserWithEmailAndPassword","set","Label","for","BookMarks","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","Redirect","App","BrowserRouter","Switch","App_PrivateRoute","exact","path","Bookmarks","store","es","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.a8ddbba4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyBGc4rk9kavNhiyyO3y8BfZfPaBDnogQSc\",\n  authDomain: \"firecontacts-b29e1.firebaseapp.com\",\n  databaseURL: \"https://firecontacts-b29e1.firebaseio.com\",\n  projectId: \"firecontacts-b29e1\",\n  storageBucket: \"firecontacts-b29e1.appspot.com\",\n  messagingSenderId: \"792701271286\",\n};\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport default firebase.firestore();\n","import toastr from \"toastr\";\nimport db from \"../firebase\";\nimport {\n  ADD_CONTACT,\n  REMOVE_CONTACT,\n  EDIT_CONTACT,\n} from \"../actions/actionTypes\";\n\nexport const SET_CONTACTS = \"SET_CONTACTS\";\n\nconst contacts = [];\n\nconst reducer = (state = contacts, { type, payload }) => {\n  switch (type) {\n    case ADD_CONTACT: {\n      return [payload, ...state];\n    }\n    case REMOVE_CONTACT: {\n      // id -> payload\n      const contacts = [...state];\n      const index = contacts.findIndex((contact) => contact.id === payload);\n      contacts.splice(index, 1);\n      return contacts;\n    }\n    case EDIT_CONTACT: {\n      // payload: { id , newdata }\n      const contacts = [...state];\n      const index = contacts.findIndex((contact) => contact.id === payload.id);\n      contacts[index] = payload.newData;\n      return contacts;\n    }\n    case SET_CONTACTS: {\n      return payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\nexport const saveContact = (contact) => (dispatch) => {\n  const userid = localStorage.getItem(\"auth_userId\");\n\n  db.collection(\"users\")\n    .doc(userid)\n    .get()\n    .then((res) => {\n      // get existing contact array\n      const contacts =\n        res.data().contacts !== undefined ? [...res.data().contacts] : [];\n      // push new contact to the array\n      contacts.push(contact);\n\n      // overrite existing contact array with new contact after push\n      db.collection(\"users\")\n        .doc(userid)\n        .update({ contacts })\n        .then((res) => {\n          toastr.success(\"Successfully Saved!!\");\n        });\n    });\n};\n\nexport const setContacts = (payload) => ({ type: SET_CONTACTS, payload });\n","export const ADD_CONTACT = \"ADD_CONTACT\";\nexport const REMOVE_CONTACT = \"REMOVE_CONTACT\";\nexport const EDIT_CONTACT = \"EDIT_CONTACT\";\nexport const ADD_BOOKMARK = \"ADD_BOOKMARK\";\nexport const REMOVE_BOOKMARK = \"REMOVE_BOOKMARK\";\nexport const AUTH_REGISTER = \"AUTH_REGISTER\";\nexport const AUTH_SETUSER = \"AUTH_SETUSER\";\n","import { ADD_BOOKMARK, REMOVE_BOOKMARK } from \"../actions/actionTypes\";\n\nconst reducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case ADD_BOOKMARK: {\n      const bookmarks = [...state];\n      const exits = bookmarks.filter((bookmark) => bookmark.id === payload.id)\n        .length\n        ? true\n        : false;\n\n      if (exits) {\n        const index = bookmarks.findIndex(\n          (contact) => contact.id === payload.id\n        );\n        bookmarks.splice(index, 1);\n        return bookmarks;\n      }\n\n      return [payload, ...state];\n    }\n    case REMOVE_BOOKMARK: {\n      const bookmarks = [...state];\n      const index = bookmarks.findIndex((contact) => contact.id === payload);\n      bookmarks.splice(index, 1);\n      return bookmarks;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const LOADING_STATE = \"LOADING_STATE\";\n\nconst reducer = (state = { loading: false }, { type, payload }) => {\n  switch (type) {\n    case LOADING_STATE: {\n      return {\n        ...state,\n        loading: payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\nexport const loadingState = (payload) => ({\n  type: LOADING_STATE,\n  payload,\n});\n","import { AUTH_SETUSER } from \"../actions/actionTypes\";\nimport db, { auth } from \"../firebase\";\nimport { loadingState } from \"./metaReducer\";\nimport { setContacts } from \"./contactReducer\";\n\n// const GET_AUTH = \"GET_AUTH\";\n\nconst reducer = (\n  state = {\n    isLoggedin: false,\n    user: null,\n  },\n  { type, payload }\n) => {\n  switch (type) {\n    case AUTH_SETUSER: {\n      return payload;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\nexport const authSetuser = () => (dispatch) => {\n  dispatch(loadingState(true));\n  auth.onAuthStateChanged((user) => {\n    if (user)\n      db.collection(\"users\")\n        .doc(user.uid)\n        .get()\n        .then((res) => {\n          dispatch(loadingState(false));\n          dispatch(setContacts(res.data().contacts || []));\n\n          dispatch({\n            type: AUTH_SETUSER,\n            payload: {\n              isLoggedin: true,\n              userId: user.uid,\n              user: res.data().profile,\n            },\n          });\n        });\n    else {\n      dispatch(loadingState(false));\n      dispatch({\n        type: AUTH_SETUSER,\n        payload: {\n          isLoggedin: false,\n          user: null,\n        },\n      });\n    }\n  });\n};\n\nexport const authLogout = () => (dispatch) => {\n  auth.signOut().then((res) => {\n    dispatch({\n      type: AUTH_SETUSER,\n      payload: {\n        isLoggedin: false,\n        user: null,\n      },\n    });\n  });\n};\n","import { combineReducers } from \"redux\";\n\nimport contacts from \"./contactReducer\";\nimport bookmarks from \"./bookmarkReducer\";\nimport auth from \"./authReducer\";\nimport meta from \"./metaReducer\";\n\nconst rootReducer = combineReducers({ contacts, bookmarks, auth, meta });\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nexport default createStore(rootReducer, compose(applyMiddleware(...[thunk])));\n\n/*\n\ncreateStore(\n  rootReducer,\n  compose(\n    applyMiddleware(...[thunk]),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\n*/\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Badge,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { authLogout } from \"../store/reducers/authReducer\";\nclass AppNavba extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false,\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n\n  logout = () => {\n    this.props.authLogout();\n    localStorage.removeItem(\"auth_userId\");\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar color=\"danger\" dark expand=\"md\">\n          <NavbarBrand tag={Link} to=\"/\">\n            Phonebook App\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          {this.props.auth.isLoggedin ? (\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink tag={Link} to=\"/\">\n                    Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} to=\"/add\">\n                    New Contact\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} to=\"/bookmarks\">\n                    Bookmarks\n                    {this.props.bookmarks.length !== 0 && (\n                      <Badge className=\"ml-1\">\n                        {this.props.bookmarks.length}\n                      </Badge>\n                    )}\n                  </NavLink>\n                </NavItem>\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret>\n                    Hello, {this.props.auth.user.first_name}\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem>settings</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.logout}>Logout</DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </Nav>\n            </Collapse>\n          ) : (\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink tag={Link} to=\"/login\">\n                    Login\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} to=\"/register\">\n                    Register\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          )}\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  ({ auth, bookmarks }) => ({ auth, bookmarks }),\n  { authLogout }\n)(AppNavba);\n","import React from \"react\";\n\nimport AppNavbar from \"./AppNavbar\";\n\nimport { Container, Row, Col } from \"reactstrap\";\n\nexport default class Layout extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <AppNavbar />\n        <Container className=\"py-5\">\n          <Row>\n            <Col sm={8} className=\"mx-auto\">\n              {this.props.children}\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n","import { REMOVE_BOOKMARK } from \"./actionTypes\";\n\nexport const removeFromBookmark = (id) => ({\n  type: REMOVE_BOOKMARK,\n  payload: id,\n});\n","import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\n\nimport { connect } from \"react-redux\";\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Button,\n  Input,\n} from \"reactstrap\";\nimport { removeContact } from \"../store/actions/removeContact\";\nimport { addToBookMark } from \"../store/actions/addToBookmark\";\nimport { removeFromBookmark } from \"../store/actions/removeFromBookmark\";\nimport { BarLoader } from \"react-spinners\";\nclass Home extends Component {\n  state = {\n    searchTerm: \"\",\n  };\n\n  isBookmarked = (id) => {\n    return this.props.bookmarks.find((bookmarks) => bookmarks.id === id)\n      ? true\n      : false;\n  };\n\n  removeContact = (contact) => {\n    if (window.confirm(\"Sure to delete?\")) {\n      this.props.removeContact(contact.id);\n      this.props.removeFromBookmark(contact.id);\n    }\n  };\n\n  search = (e) => {\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  render() {\n    if (this.props.meta.loading)\n      return (\n        <Layout>\n          <div className=\"text-center\">\n            <BarLoader sizeUnit={\"px\"} size={500} color={\"#123abc\"} />\n          </div>\n        </Layout>\n      );\n    if (this.props.contacts.length === 0)\n      return (\n        <Layout>\n          <h1 className=\"text-muted\">No saved contact in phonebook</h1>\n        </Layout>\n      );\n\n    return (\n      <Layout>\n        <div>\n          <Input\n            onChange={this.search}\n            placeholder=\"Search by Name / Email / phonenumber\"\n          />\n        </div>\n\n        {this.props.contacts\n          .filter(\n            (c) =>\n              c.name\n                .toLowerCase()\n                .includes(this.state.searchTerm.toLowerCase()) ||\n              c.email\n                .toLowerCase()\n                .includes(this.state.searchTerm.toLowerCase()) ||\n              c.phone\n                .toLowerCase()\n                .includes(this.state.searchTerm.toLowerCase())\n          )\n          .map((contact) => (\n            <Card className=\"my-3\" key={contact.id}>\n              <CardHeader>{contact.name}</CardHeader>\n              <CardBody>\n                <p>Name: {contact.name}</p>\n                <p>Email: {contact.email}</p>\n                <p>Phone: {contact.phone}</p>\n              </CardBody>\n              <CardFooter>\n                <Button\n                  color={\n                    this.isBookmarked(contact.id) ? `primary` : `secondary`\n                  }\n                  onClick={() => this.props.addToBookMark(contact)}\n                >\n                  <i className=\"fa fa-heart\" />\n                </Button>\n                <Button\n                  color=\"danger\"\n                  className=\"ml-2\"\n                  onClick={() => this.removeContact(contact)}\n                >\n                  <i className=\"fa fa-times\" />\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n      </Layout>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({ ...state }),\n  { removeContact, addToBookMark, removeFromBookmark }\n)(Home);\n","import toastr from \"toastr\";\nimport { REMOVE_CONTACT } from \"./actionTypes\";\n\nimport db from \"../firebase\";\nexport const removeContact = (contactId) => (dispatch) => {\n  const userid = localStorage.getItem(\"auth_userId\");\n\n  db.collection(\"users\")\n    .doc(userid)\n    .get()\n    .then((res) => {\n      // get existing contact array\n      const contacts = res.data().contacts;\n      const index = contacts.findIndex((c) => c.id === contactId);\n      contacts.splice(index, 1);\n\n      // overrite existing contact array with new contact after push\n      db.collection(\"users\")\n        .doc(userid)\n        .update({ contacts })\n        .then((res) => {\n          toastr.success(\"Successfully Deleted!!\");\n          dispatch({\n            type: REMOVE_CONTACT,\n            payload: contactId,\n          });\n        });\n    });\n};\n","import { ADD_BOOKMARK } from \"./actionTypes\";\n\nexport const addToBookMark = (contact) => ({\n  type: ADD_BOOKMARK,\n  payload: contact,\n});\n","import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { FormGroup, Input, FormFeedback, Button } from \"reactstrap\";\nimport { v4 } from \"uuid\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../store/actions/addContact\";\n\nimport { isEmail, isEmpty } from \"validator\";\nimport { saveContact } from \"../store/reducers/contactReducer\";\n\nclass Add extends Component {\n  state = {\n    contact: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n    },\n    errors: {},\n  };\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n\n    //TODO: async validation\n    const errors = {};\n\n    Object.keys(this.state.contact).map((key) => {\n      if (isEmpty(this.state.contact[key])) {\n        return (errors[key] = `${key} can't be empty`);\n      }\n      key === \"email\" &&\n        !isEmail(this.state.contact[key]) &&\n        (errors[key] = `${key} is not a valid email address`);\n    });\n    this.setState({ errors });\n\n    // TODO: how it works?\n    if (Object.keys(errors).length === 0) {\n      this.props.addContact({ id: v4(), ...this.state.contact }); // save in redux store\n      this.props.saveContact(\n        { id: v4(), ...this.state.contact },\n        this.props.auth.userId\n      ); // save in firebase db\n      this.props.history.push(\"/\");\n    }\n  };\n\n  onChange = (e) => {\n    const contact = { ...this.state.contact };\n    contact[e.target.name] = e.target.value;\n\n    this.setState({ contact });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <div className=\"py-3\">\n          <h2 className=\"text-uppercase\">Add new contact</h2>\n        </div>\n        <form onSubmit={this.onSubmit}>\n          {Object.keys(this.state.contact).map((key) => (\n            <FormGroup key={key}>\n              <Input\n                onChange={this.onChange}\n                placeholder={key}\n                // type={key === 'email' ? 'email' : 'text'}\n                type={`text`}\n                name={key}\n                invalid={\n                  Object.keys(this.state.errors).length &&\n                  this.state.errors[key]\n                    ? true\n                    : false\n                }\n              />\n              {this.state.errors[key] && (\n                <FormFeedback>{this.state.errors[key]}</FormFeedback>\n              )}\n            </FormGroup>\n          ))}\n          <Button color=\"danger\">Save</Button>\n        </form>\n      </Layout>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({ ...state }),\n  { addContact, saveContact }\n)(Add);\n","import { ADD_CONTACT } from \"./actionTypes\";\n\nexport const addContact = (contact) => ({\n  type: ADD_CONTACT,\n  payload: { ...contact },\n});\n","import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport {\n  FormGroup,\n  Input,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n} from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\nimport { auth } from \"../store/firebase\";\nimport toastr from \"toastr\";\nimport { authSetuser } from \"../store/reducers/authReducer\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  componentDidMount() {\n    localStorage.getItem(\"auth_userId\") !== null &&\n      this.props.history.push(\"/\");\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then((res) => {\n        localStorage.setItem(\"auth_userId\", res.user.uid);\n        this.props.history.push(\"/\");\n      })\n      .catch((e) => toastr.error(e.message));\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Card>\n          <CardHeader>Login</CardHeader>\n          <CardBody>\n            <form onSubmit={this.onSubmit}>\n              {Object.keys(this.state).map((key) => (\n                <FormGroup key={key}>\n                  <Input\n                    placeholder={key}\n                    value={this.state[key]}\n                    name={key}\n                    onChange={this.onChange}\n                    type={key === \"password\" ? key : \"email\"}\n                  />\n                </FormGroup>\n              ))}\n              <FormGroup>\n                <Button color=\"danger\">Register</Button>\n              </FormGroup>\n            </form>\n          </CardBody>\n        </Card>\n      </Layout>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { authSetuser }\n)(Login);\n","import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport toastr from \"toastr\";\nimport {\n  FormGroup,\n  Input,\n  Label,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n} from \"reactstrap\";\n\nimport db, { auth } from \"../store/firebase\";\n\nimport { connect } from \"react-redux\";\n\nclass Register extends Component {\n  state = {\n    first_name: \"\",\n    last_name: \"\",\n    facebook_profile_url: \"\",\n    email: \"\",\n    password: \"\",\n  };\n  componentDidMount() {\n    localStorage.getItem(\"auth_userId\") !== null &&\n      this.props.history.push(\"/\");\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const {\n      first_name,\n      last_name,\n      facebook_profile_url,\n      email,\n      password,\n    } = this.state;\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((res) => {\n        localStorage.setItem(\"auth_userId\", res.user.uid);\n\n        db.collection(\"users\")\n          .doc(res.user.uid)\n          .set({\n            profile: {\n              first_name,\n              last_name,\n              facebook_profile_url,\n              email,\n            },\n          })\n          .then((res) => {\n            this.props.history.push(\"/\");\n            toastr.success(\"Registration successfully\");\n          });\n      })\n      .catch((e) => toastr.error(e.message));\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Card>\n          <CardHeader>Register</CardHeader>\n          <CardBody>\n            <form onSubmit={this.onSubmit}>\n              {Object.keys(this.state).map((key) => (\n                <FormGroup key={key}>\n                  <Label for={key}>{key}</Label>\n                  <Input\n                    id={key}\n                    placeholder={key}\n                    value={this.state[key]}\n                    name={key}\n                    onChange={this.onChange}\n                    type={\n                      key === \"password\" || key === \"email\"\n                        ? key\n                        : key === \"facebook_profile_url\"\n                        ? \"url\"\n                        : \"text\"\n                    }\n                  />\n                </FormGroup>\n              ))}\n              <FormGroup>\n                <Button color=\"danger\">Register</Button>\n              </FormGroup>\n            </form>\n          </CardBody>\n        </Card>\n      </Layout>\n    );\n  }\n}\n\nexport default connect(null)(Register);\n","import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Card, CardHeader, CardBody, CardFooter, Button } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { removeFromBookmark } from \"../store/actions/removeFromBookmark\";\nclass BookMarks extends Component {\n  render() {\n    return (\n      <Layout>\n        <h1>Bookmarks</h1>\n        <h3>Total bookmarks: {this.props.bookmarks.length}</h3>\n\n        {this.props.bookmarks.map((contact) => (\n          <Card className=\"my-3\" key={contact.id}>\n            <CardHeader>{contact.name}</CardHeader>\n            <CardBody>\n              <p>Name: {contact.name}</p>\n              <p>Email: {contact.email}</p>\n              <p>Phone: {contact.phone}</p>\n            </CardBody>\n            <CardFooter>\n              <Button\n                color=\"danger\"\n                onClick={() =>\n                  window.confirm(\"Sure to delete?\") &&\n                  this.props.removeFromBookmark(contact.id)\n                }\n              >\n                <i className=\"fa fa-times\" />\n              </Button>\n            </CardFooter>\n          </Card>\n        ))}\n      </Layout>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({ ...state }),\n  { removeFromBookmark }\n)(BookMarks);\n","import React, { Component } from \"react\";\nimport Home from \"./pages/Home\";\nimport Add from \"./pages/Add\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Bookmarks from \"./pages/Bookmarks\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, isLoggedin, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      localStorage.getItem(\"auth_userId\") !== null ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Home} />\n          <PrivateRoute exact path=\"/add\" component={Add} />\n          <PrivateRoute exact path=\"/bookmarks\" component={Bookmarks} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect((state) => ({ ...state }))(App);\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"toastr/build/toastr.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { authSetuser } from \"./store/reducers/authReducer\";\nimport App from \"./App\";\nstore.dispatch(authSetuser()); // check is logged in\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}